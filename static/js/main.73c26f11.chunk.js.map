{"version":3,"sources":["avatar.svg","hero.svg","CustomLink.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomLink","props","Nav","Link","this","children","React","Component","Scroll","styles","center","display","justifyContent","alignItems","card","width","margin","App","INIT_STATE","active","state","scrollSpy","update","Navbar","style","backgroundColor","variant","expand","sticky","Brand","href","fontWeight","Toggle","aria-controls","Collapse","id","className","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","color","name","padding","paddingBottom","textAlign","height","borderRadius","src","photo","fontSize","bottom","marginTop","hero","maxWidth","flexWrap","Card","Header","icon","faReact","size","faNodeJs","faBrain","faDatabase","faBeer","Body","Title","Text","faJava","faNetworkWired","faBitcoin","faPython","faChartBar","faJs","faBicycle","faUnity","faWindows","faGamepad","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.73c26f11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.5fd88976.svg\";","module.exports = __webpack_public_path__ + \"static/media/hero.ae74261d.svg\";","import Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport * as Scroll from 'react-scroll';\n/*\nOverride the active proper\n*/\nclass CustomLink extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n      return (\n        <Nav.Link {...this.props}>\n          {this.props.children}\n        </Nav.Link>\n      );\n    }\n}\n\nexport default Scroll.ScrollLink(CustomLink);","import React from 'react';\nimport './App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport * as Scroll from 'react-scroll';\nimport {  Element, animateScroll as scroll, scrollSpy } from 'react-scroll';\nimport photo from './avatar.svg';\nimport hero from './hero.svg';\nimport CustomLink from './CustomLink';\nimport Card from 'react-bootstrap/Card'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBeer, faBicycle, faBrain, faChartBar, faDatabase, faGamepad, faNetworkWired } from '@fortawesome/free-solid-svg-icons'\nimport { faBitcoin, faJava, faJs, faNode, faNodeJs, faPython, faReact, faUnity, faWindows } from '@fortawesome/free-brands-svg-icons'\n// import { faReact } from '@fortawesome/free-'\n\n// To fill out later.\nconst styles = {\n  center: {display:\"flex\",\n          justifyContent:\"center\",\n          alignItems:\"center\"},\n  card: { width: '18rem', margin:20, width:500 }\n}\n\nclass App extends React.Component{\n  INIT_STATE = {\n    active: \"aboutme\"\n  }\n  constructor(props){\n    super(props)\n    this.state = {...this.INIT_STATE}\n  }\n\n  componentDidMount(){\n    scrollSpy.update();\n  }\n\n   \n  render(){\n    var navbarHeight = 55;\n    var navbarColor = \"#7D3C98\";\n    return(\n        <div>\n          <Navbar style={{backgroundColor:navbarColor}}  variant=\"dark\" expand=\"sm\" sticky=\"top\">\n            <Navbar.Brand href=\"#home\">\n              <strong style={{fontWeight:700}}>Winton Nathan-Roberts</strong>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ml-auto\" variant=\"pills\">\n                <CustomLink activeClass=\"active\" to=\"aboutme\" spy={true} smooth={true} offset={-navbarHeight} duration={500} onSetActive={this.handleSetActive}>\n                  <strong style={{fontWeight:700, color:\"white\"}}>ABOUT ME</strong>\n                </CustomLink>\n                <CustomLink activeClass=\"active\" to=\"portfolio\" spy={true} smooth={true} offset={-navbarHeight} duration={500} onSetActive={this.handleSetActive} >\n                  <strong style={{fontWeight:700, color:\"white\"}}>PORTFOLIO</strong>\n                </CustomLink>\n                <CustomLink activeClass=\"active\" to=\"contact\" spy={true} smooth={true} offset={-navbarHeight} duration={500} onSetActive={this.handleSetActive} >\n                  <strong style={{fontWeight:700, color:\"white\"}}>CONTACT</strong>\n                </CustomLink>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Element name=\"aboutme\" className=\"element\" style={{padding:20, paddingBottom:0}}>\n          <div style={{backgroundColor:\"white\"}}>\n            <h1 style={{...styles.center,textAlign:\"center\"}}>Frontend, Backend & Data Engineer</h1>\n            <div style={styles.center}>\n              <div style={{height:250,width:250, borderRadius:1000,backgroundColor:\"white\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\", margin:20}}>\n                <img src={photo} style={{height:240, borderRadius:1000}}/>\n              </div>\n            </div>\n            <hr style={{height:2,width:260,backgroundColor:\"grey\"}} />\n            <div style={styles.center}>\n            <small style={{fontSize:18, textAlign:\"center\"}}>I design and code elegant solutions to problems of varying complexity in teams or independently.</small>\n            </div>\n            <div style={{...styles.center, bottom:0, marginTop:30}}>\n              <img src={hero} style={{width:550 ,maxWidth:\"100%\"}}/>\n            </div>\n          </div>\n          </Element>\n          \n          <Element name=\"portfolio\" className=\"element\">\n          <div style={{backgroundColor:\"purple\", padding:20}}>\n          <h1 style={{...styles.center,textAlign:\"center\", color:\"white\"}}>My Recent Work</h1>\n          <div style={{display:\"flex\",flexWrap:\"wrap\", justifyContent:\"center\"}}>\n              <Card\n                style={styles.card}\n                className=\"mb-2\"\n              >\n                <Card.Header style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                  <div style={styles.center}>\n                    <div><FontAwesomeIcon icon={faReact} size=\"lg\" style={{width:40}}/>React</div>\n                    <div><FontAwesomeIcon icon={faNodeJs} size=\"lg\" style={{width:40}}/>Node</div>\n                    <div><FontAwesomeIcon icon={faBrain} size=\"lg\" style={{width:40}}/>Tensorflow</div>\n                    <div><FontAwesomeIcon icon={faDatabase} size=\"lg\" style={{width:40}}/>Firebase</div>\n                  </div>\n                  \n                  <FontAwesomeIcon icon={faBeer} color=\"grey\" size=\"2x\" style={{width:40}}/>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title> NLP Beverage Classifier </Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk\n                    of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card\n                style={styles.card}\n                className=\"mb-2\"\n              >\n                <Card.Header style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                  <div style={styles.center}>\n                    <div><FontAwesomeIcon icon={faJava} size=\"lg\" style={{width:40}}/>Java</div>\n                    <div><FontAwesomeIcon icon={faNetworkWired} size=\"lg\" style={{width:40}}/>TCP/IP</div>\n                    <div><FontAwesomeIcon icon={faNetworkWired} size=\"lg\" style={{width:40}}/>Multithreaded</div>\n                  </div>\n                  <FontAwesomeIcon icon={faBitcoin} color=\"#fabb01\" size=\"2x\" style={{width:40}}/>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title> Peer-Peer Blockchain </Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk\n                    of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n          </div>\n          <div style={{display:\"flex\",flexWrap:\"wrap\", justifyContent:\"center\"}}>\n              <Card\n                style={styles.card}\n                className=\"mb-2\"\n              >\n                <Card.Header style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                  <div style={styles.center}>\n                    <div><FontAwesomeIcon icon={faPython} size=\"lg\" style={{width:40}}/>Python (Pandas, Numpy, Scipy)</div>\n                  </div>\n                  <FontAwesomeIcon icon={faChartBar} color=\"tomato\" size=\"2x\" style={{width:40}}/>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title> Covid-19 Data Analysis and Modelling </Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk\n                    of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card\n                style={styles.card}\n                className=\"mb-2\"\n              >\n                <Card.Header style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                  <div style={styles.center}>\n                    <div><FontAwesomeIcon icon={faReact} size=\"lg\" style={{width:40}}/>React Native</div>\n                    <div><FontAwesomeIcon icon={faDatabase} size=\"lg\" style={{width:40}}/>GraphQL</div>\n                    <div><FontAwesomeIcon icon={faJs} size=\"lg\" style={{width:40}}/>JavaScript</div>\n                  </div>\n                  <FontAwesomeIcon icon={faBicycle} color=\"black\" size=\"2x\" style={{width:40}}/>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title> BikeRadar: Share Bike Aggregator </Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk\n                    of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n          </div>\n          <div style={{display:\"flex\",flexWrap:\"wrap\", justifyContent:\"center\"}}>\n              <Card\n                style={styles.card}\n                className=\"mb-2\"\n              >\n                <Card.Header style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                  <div style={styles.center}>\n                    <div><FontAwesomeIcon icon={faUnity} size=\"lg\" style={{width:40}}/>Unity</div>\n                    <div><FontAwesomeIcon icon={faWindows} size=\"lg\" style={{width:40}}/>.NET C#</div>\n                  </div>\n                  <FontAwesomeIcon icon={faGamepad} color=\"#55b9da\" size=\"2x\" style={{width:40}}/>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title> Wild West Zombie Mobile Game </Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk\n                    of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n          </div>\n          </div>\n          </Element>\n\n          <Element name=\"contact\" className=\"element\">\n          <div style={{height:600, backgroundColor:\"white\"}}>\n            Contact Form\n          </div>\n          </Element>\n\n          <Navbar style={{backgroundColor:navbarColor}} variant=\"dark\">\n            <div style={{height:\"50vh\",color:\"white\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\", width:\"100%\"}}>\n              Copyright © Winton Nathan-Roberts 2020\n            </div>\n          </Navbar>\n\n        </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}